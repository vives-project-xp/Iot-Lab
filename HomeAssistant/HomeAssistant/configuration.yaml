homeassistant:
  customize: !include customize.yaml
  allowlist_external_dirs:
    - "/config/tmp/"

# Example configuration.yaml entry to enable the cloud component
cloud:

# Loads default set of integrations. Do not remove.
default_config:

frontend:
  themes: !include_dir_merge_named themes

# Example configuration.yaml entry
rest_command:
  post_spongebob:
    url: "http://172.16.99.3:3000/base64"
    method: POST
    content_type: "image/png"
    payload: "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"
  post_black:
    url: "http://172.16.99.3:3000/base64"
    method: POST
    content_type: "image/png"
    payload: "iVBORw0KGgoAAAANSUhEUgAAAGAAAABACAYAAADlNHIOAAAABGdBTUEAALGPC/xhBQAAAAFzUkdCAK7OHOkAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAEDSURBVHhe7dZBDoMgFADRD0ETTI/QG3TR+x9NbWtdcAMXg2ReQgR2MokSz/friAgHNFKbCJLbUxADwAwAMwDMABeldO0IvQVddu0IDQAb8hOU69Rm/RsuQM45psfcVv0bLsBSlyjr3lb9Gy5AmUrM57iLoX7CtdY4jj1+5xtt66ft9m2oACmlmEqObf+2nf55DYUNeQ29EwPADAAzAMwAMAPADAAzAMwAMAPADAAzAMwAMAPADAAzAMwAMAPADAAzAMwAMAPADAAzAMwAMAPADAAzAMwAMAPADAAzAMwAMAPADAAzAMwAMAPADAAzAMwAMAPADAAzAMwAMAPADAAzACriD1yLdOuF2KUiAAAAAElFTkSuQmCC"
  post_meme:
    url: "http://172.16.99.3:3000/base64"
    method: POST
    content_type: "image/png"
    payload: ""
shell_command:
  post_spongebob: bash /config/bash_scripts/curlPost.sh "spongebob"
  post_black: bash /config/bash_scripts/curlPost.sh "black"
  touch: bash /config/bash_scripts/touch.sh

# Text to speech
tts:
  - platform: google_translate

automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
group: !include groups.yaml

# Example configuration.yaml entry
input_boolean:
  nfc_tag:
    name: Notify when tag not scanned too long
    icon: mdi:car
# groups: !include groups.yaml

#PING
# Example configuration.yaml entry
binary_sensor:
  - platform: ping
    host: "project.devbit.be"
    name: "redmine/devbit"
    count: 5
    scan_interval: 120
  - platform: ping
    host: "thumfi.be"
    name: "thumfi"
    count: 5
    scan_interval: 120
  - platform: ping
    host: "app.thumfi.be"
    name: "app_thumfi"
    count: 5
    scan_interval: 120
  - platform: ping
    host: "mqtt.devbit.be"
    name: "devbit mqtt broker"
    count: 5
    scan_interval: 120
  - platform: ping
    host: "landing.thumfi.be"
    name: "landing_thumfi"
    count: 5
    scan_interval: 120
  - platform: ping
    host: "dust.devbitapp.be"
    name: "dust"
    count: 5
    scan_interval: 120
  - platform: ping
    host: "graduaat.thumfi.be"
    name: "graduaat"
    count: 5
    scan_interval: 120
  - platform: ping
    host: "vives.be"
    name: "vives"
    count: 5
    scan_interval: 120
  - platform: ping
    host: "public.thumfi.be"
    name: "public"
    count: 5
    scan_interval: 120

notify:
  - name: ALL_DEVICES
    platform: group
    services:
      - service: mobile_app_sm_a528b
      - service: mobile_app_sm_a505fn
      - service: mobile_app_lenovomatias
      - service: mobile_app_sm_a505fn
  - name: WhatsApp_message_Phone1
    platform: rest
    resource: https://api.callmebot.com/whatsapp.php
    data:
      source: HA
      phone: +32497841010 #enter your phone number here
      apikey: 6292162 #enter your apikey here (see Setup above)
  - name: WhatsApp_message_phone2
    platform: rest
    resource: https://api.callmebot.com/whatsapp.php
    data:
      source: HA
      phone: +32499731528 #enter your phone number here
      apikey: 9607846 #enter your apikey here (see Setup above)

mqtt:
  broker: 127.0.0.1
  port: 1883
  client_id: home-assistant
  keepalive: 60

  switch:
    - unique_id: powersupply_switch
      name: "powersupply switch"
      state_topic: "state"
      command_topic: "state"
      payload_on: "on"
      payload_off: "off"
      qos: 1
      retain: true
    - unique_id: current_effect_switch
      name: "current effect switch"
      state_topic: "currentEffect"
      command_topic: "currentEffect"
      qos: 1
      payload_on: "on"
      payload_off: "off"
      retain: true
  #   - unique_id: daytime
  #     name: "daytime"
  #     state_topic: "daytime"
  #     command_topic: "daytime"
  #     payload_on: "on"
  #     payload_off: "off"
  #     qos: 1
  #     retain: true

input_number:
  voltage_slider:
    name: "voltage_slider"
    min: 22
    max: 45
    step: 1
  current_slider:
    name: "current_slider"
    min: 1
    max: 10
    step: 0.1

template:
  - binary_sensor:
      - name: "koelkast"
        state: >
          {{ is_state('switch.powersupply_switch', 'on') }}
  - binary_sensor:
      - name: "Boiler"
        state: >
          {{ is_state('switch.bouwlamp2_plug_3', 'on') }}
  - binary_sensor:
      - name: "Oven"
        state: >
          {{ is_state('switch.dvdw_plug3', 'on') }}

switch:
  - platform: template
    switches:
      icon:
        value_template: "{{ is_state('switch.powersupply_switch', 'on') }}"
        turn_on:
          service: switch.turn_on
          data:
            entity_id: switch.powersupply_switch
        turn_off:
          service: switch.turn_off
          data:
            entity_id: switch.powersupply_switch
        icon_template: >-
          {% if is_state('switch.powersupply_switch', 'on') %}
            mdi:weather-sunny
          {% else %}
            mdi:moon-waning-crescent
          {% endif %}

sensor:
  # - platform: mqtt
  #   name: "powersupply switch"
  #   state_topic: "voltage"

  - platform: mqtt
    name: "consumption_low_tarif"
    unit_of_measurement: "kWh"
    state_topic: "iot/myhome/cdem/consumption_low_tarif"
    unique_id: "consumption_low_tarif"
    value_template: "{{ value|float}}"
    device_class: energy
    state_class: total

  - platform: mqtt
    name: "consumption_high_tarif"
    unit_of_measurement: "kWh"
    state_topic: "iot/myhome/cdem/consumption_high_tarif"
    unique_id: "consumption_high_tarif"
    value_template: "{{ value|float}}"
    device_class: energy
    state_class: total

  - platform: mqtt
    name: "production_low_tarif"
    unit_of_measurement: "kWh"
    state_topic: "iot/myhome/cdem/production_low_tarif"
    unique_id: "production_low_tarif"
    value_template: "{{ value|float}}"
    device_class: energy
    state_class: total

  - platform: mqtt
    name: "production_high_tarif"
    unit_of_measurement: "kWh"
    state_topic: "iot/myhome/cdem/production_high_tarif"
    unique_id: "production_high_tarif"
    value_template: "{{ value|float}}"
    device_class: energy
    state_class: total

  - platform: mqtt
    name: "gas"
    unit_of_measurement: "m²"
    state_topic: "iot/myhome/cdem/gas"
    unique_id: "gas"
    value_template: "{{ value|float}}"

  - platform: mqtt
    name: "water"
    unit_of_measurement: "m²"
    state_topic: "iot/myhome/cdem/water"
    unique_id: "water"
    value_template: "{{ value|float}}"

  - platform: mqtt
    name: "actual_tarif"
    unit_of_measurement: ""
    state_topic: "iot/myhome/cdem/actual_tarif"
    unique_id: "actual_tarif"
    value_template: "{{ value|float}}"

  - platform: mqtt
    name: "actual_voltage_l1"
    unit_of_measurement: "V"
    state_topic: "iot/myhome/cdem/actual_voltage_l1"
    unique_id: "actual_voltage_l1"
    value_template: "{{ value|float}}"

  - platform: mqtt
    name: "actual_current_l1"
    unit_of_measurement: "A"
    state_topic: "iot/myhome/cdem/actual_current_l1"
    unique_id: "actual_current_l1"
    value_template: "{{ value|float}}"

  - platform: mqtt
    name: "l1_power_consumption"
    unit_of_measurement: "kWh"
    state_topic: "iot/myhome/cdem/l1_power_consumption"
    unique_id: "l1_power_consumption"
    value_template: "{{ value|float}}"
    state_class: total
    device_class: energy

  - platform: mqtt
    name: "l1_power_production"
    unit_of_measurement: "kWh"
    state_topic: "iot/myhome/cdem/l1_power_production"
    unique_id: "l1_power_production"
    value_template: "{{ value|float}}"
    state_class: total
    device_class: energy

  - platform: mqtt
    name: "current"
    unit_of_measurement: "A"
    state_topic: "current"
    unique_id: "current_dc"
    value_template: "{{ value|float}}"
    state_class: measurement
    device_class: energy

influxdb:
  host: 172.16.241.10
  port: 8086
  database: iot_lab
  username: iot
  password: iot_lab1234
  max_retries: 3
  default_measurement: state

# unifi AP  //stand alone AP dus geen password
#device_tracker:
#  - platform: unifi_direct
#    host: 172.16.0.1
#    username:
#    password:
#    interval_seconds: 60
#    consider_home: 60
#    new_device_defaults:
#    track_new_devices: true

google_assistant:
  project_id: iot-lab-ccf8e
  service_account: !include SERVICE_ACCOUNT.json
  report_state: true
